<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>数据处理 - 分类 - Spaceack's Blog</title><link>https://spaceack.github.io/categories/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</link><description>数据处理 - 分类 - Spaceack's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>spaceack@qq.com (Spaceack)</managingEditor><webMaster>spaceack@qq.com (Spaceack)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 09 Sep 2020 21:00:00 +0000</lastBuildDate><atom:link href="https://spaceack.github.io/categories/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/" rel="self" type="application/rss+xml"/><item><title>使用pandoc将markdown转为带标签目录的pdf文件</title><link>https://spaceack.github.io/20200909-%E4%BD%BF%E7%94%A8pandoc%E5%B0%86markdown%E8%BD%AC%E4%B8%BA%E5%B8%A6%E6%A0%87%E7%AD%BE%E7%9B%AE%E5%BD%95%E7%9A%84pdf%E6%96%87%E4%BB%B6/</link><pubDate>Wed, 09 Sep 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200909-%E4%BD%BF%E7%94%A8pandoc%E5%B0%86markdown%E8%BD%AC%E4%B8%BA%E5%B8%A6%E6%A0%87%E7%AD%BE%E7%9B%AE%E5%BD%95%E7%9A%84pdf%E6%96%87%E4%BB%B6/</guid><description>step1: 安装pandoc 1 sudo apt install pandoc step2: 安装转换pdf引擎 wkhtmltopdf 下载地址 step3: 执行转换 1 pandoc --pdf-engine=wkhtmltopdf --metadata pagetitle=&amp;#34;Spaceack的算法笔记&amp;#34</description></item><item><title>从Word文件抽取数据导入到Excel文件</title><link>https://spaceack.github.io/20200508-%E4%BB%8Eword%E6%96%87%E4%BB%B6%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%88%B0excel%E6%96%87%E4%BB%B6/</link><pubDate>Fri, 08 May 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200508-%E4%BB%8Eword%E6%96%87%E4%BB%B6%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%88%B0excel%E6%96%87%E4%BB%B6/</guid><description>1 2 3 pip3 install python-docx; pip3 install xlwl; 从docx抽取数据 1 2 3 4 5 6 7 8 9 import docx def get_docx(): from docx import Document path = &amp;#34;info.docx&amp;#34; document = Document(path) Lines = [] for paragraph in document.paragraphs: Lines.append(paragraph.text) return Lines 写入xls文件 1 2 3 4 5 6 import xlwt workbook = xlwt.Workbook(encoding =</description></item><item><title>在Google Colab上学习Tensorflow</title><link>https://spaceack.github.io/20200424-%E5%9C%A8googlecolab%E4%B8%8A%E5%AD%A6%E4%B9%A0tensorflow/</link><pubDate>Fri, 24 Apr 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200424-%E5%9C%A8googlecolab%E4%B8%8A%E5%AD%A6%E4%B9%A0tensorflow/</guid><description><![CDATA[挂载Google云端硬盘 1 2 3 4 5 6 7 8 from google.colab import drive import os drive.mount(&#39;/content/drive&#39;) data_dir = &#39;drive/My Drive/dataset-resized&#39; output_dir = &#39;drive/My Drive/out_put&#39; logs = &#39;drive/My Drive/logs&#39; os.listdir(data_dir) Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(&quot;/content/drive&quot;, force_remount=True). 查看被分配的GPU： ! nvidia-smi 1 2 3 4 5]]></description></item><item><title>keras使用tensorboard</title><link>https://spaceack.github.io/20200423-keras%E4%BD%BF%E7%94%A8tensorboard/</link><pubDate>Thu, 23 Apr 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200423-keras%E4%BD%BF%E7%94%A8tensorboard/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 导入库 from keras.callbacks import TensorBoard # 创建tensorboard对象， 结果保存在logs目录下 tensorboard = TensorBoard(log_dir=&amp;#39;logs/{}&amp;#39;.format(NAME),histogram_freq=1,write_grads=True) # 在模型生成器函数作为回调参数</description></item><item><title>为抗击病毒助力，你也可以！加入Folding@Home项目参与病毒研究运算！</title><link>https://spaceack.github.io/20200408-%E4%B8%BA%E6%8A%97%E5%87%BB%E7%97%85%E6%AF%92%E5%8A%A9%E5%8A%9B%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5/</link><pubDate>Wed, 08 Apr 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200408-%E4%B8%BA%E6%8A%97%E5%87%BB%E7%97%85%E6%AF%92%E5%8A%A9%E5%8A%9B%E4%BD%A0%E4%B9%9F%E5%8F%AF%E4%BB%A5/</guid><description>简单来讲， 大多数人的PC都有很大一部分闲时，通过Folding@Home分布式计算项目，每个人都可以将这一部分算力贡献出来，为抗击病毒，解决</description></item><item><title>使用PDI从Mysql抽取数据存入到Sqlite</title><link>https://spaceack.github.io/20200221-%E4%BD%BF%E7%94%A8pdi%E4%BB%8Emysql%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E5%AD%98%E5%85%A5%E5%88%B0sqlite/</link><pubDate>Fri, 21 Feb 2020 21:00:00 +0000</pubDate><author>Spaceack</author><guid>https://spaceack.github.io/20200221-%E4%BD%BF%E7%94%A8pdi%E4%BB%8Emysql%E6%8A%BD%E5%8F%96%E6%95%B0%E6%8D%AE%E5%AD%98%E5%85%A5%E5%88%B0sqlite/</guid><description>1.建立Mysql连接 2.建立Sqlite连接 自定义连接URL：jdbc:sqlite:/data/testdb.sqlite3 自定义驱动类</description></item></channel></rss>